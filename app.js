const port=3001;const express=require('express');const bodyParser=require('body-parser');const mongoose=require('mongoose');const app=express();app.set('view engine','ejs');app.use(bodyParser.urlencoded({extended:true}));app.use(express.static("public"));mongoose.connect("mongodb://127.0.0.1:27017/wikiDB",{useNewUrlParser:true,useUnifiedTopology:true});const articleSchema={title:String,content:String};const Article=mongoose.model("Article",articleSchema);app.route("/articles").get(function(req,res){Article.find(function(err,foundArticles){if(err){console.log("[-]err-->"+err)}else{res.send(foundArticles)}})}).post(function(req,res){const newArticle=new Article({title:req.body.title,content:req.body.content});newArticle.save(function(err){if(err){console.log("[-]err-->"+err)}else{console.log("[+]success-->made a new article")}})}).delete(function(req,res){Article.deleteMany(function(err){if(err){console.log('[-]err-->'+err)}else{console.log("[+]success-->deleted all articles")}})});app.route("/articles/:articleTitle").get(function(req,res){Article.findOne({title:req.params.articleTitle},function(err,foundArticle){if(foundArticle){res.send(foundArticle)}else{res.send("[-]err-->no articles with that title found :(")}})}).put(function(req,res){Article.update({title:req.params.articleTitle},{title:req.body.title,content:req.body.content},{overwrite:true},function(err){if(err){console.log("[-]err-->"+err)}else{res.send("[+]success-->updated article")}})}).patch(function(req,res){Article.update({title:req.params.articleTitle},{$set:req.body},function(err){if(err){console.log("[-]err-->"+err);res.send("[-]err-->"+err)}else{res.send("[+]success-->updated article")}})}).delete(function(req,res){Article.deleteOne({title:req.params.articleTitle},function(err){if(err){console.log("[-]err-->"+err);res.send("[-]err-->"+err)}else{res.send("[+]success-->deleted the corresponding article")}})});app.listen(port,function(){console.log('[+]success-->started||port-->'+port)})
